type Artist {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: String
}

input CreateArtistInput {
  firstName: String!
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [BandInput]
  instruments: String
}

input UpdateArtistInput {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [BandInput]
  instruments: String
}

type Query {
  artists(limit: Int): [Artist]
  artist(id: ID!): Artist
}

type Mutation {
  createArtist(input: CreateArtistInput): Artist
  updateArtist(id: ID!, input: UpdateArtistInput): Artist
}
