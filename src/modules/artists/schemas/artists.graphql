type Artist {
  id: ID!
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bands: [Band]
  instruments: String
}

type ArtistData {
  items: [Artist]
  offset: Int
  limit: Int
  total: Int
}

input CreateArtist {
  firstName: String!
  secondName: String!
  middleName: String
  birthDate: String
  birthPlace: String
  country: String!
  bandsIds: [ID]
  instruments: [String]
}

input UpdateArtist {
  firstName: String
  secondName: String
  middleName: String
  birthDate: String
  birthPlace: String
  country: String
  bandsIds: [ID]
  instruments: String
}

type Query {
  artists(limit: Int, offset: Int): ArtistData
  artist(id: ID!): Artist
}

type Mutation {
  createArtist(artist: CreateArtist): Artist
  updateArtist(id: ID!, artist: UpdateArtist): Artist
  deleteArtist(id: ID!): Artist
}
