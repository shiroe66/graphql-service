type Track {
  id: ID!
  title: String!
  album: Album
  artists: [Artist]
  bands: [Band]
  duration: Int
  released: Int
  genres: [Genre]
}
type TrackData {
  items: [Track]
  offset: Int
  limit: Int
  total: Int
}

input CreateTrack {
  title: String!
  albumId: ID
  artistsIds: [ID]
  bandsIds: [ID]
  duration: Int
  released: Int
  genresIds: [ID]
}

input UpdateTrack {
  title: String!
  albumId: ID
  artistsIds: [ID]
  bandsIds: [ID]
  duration: Int
  released: Int
  genresIds: [ID]
}

type Query {
  tracks(limit: Int, offset: Int): TrackData
  track(id: ID): Track
}

type Mutation {
  createTrack(track: CreateTrack): Track
  updateTrack(id: ID!, track: UpdateTrack): Track
  deleteTrack(id: ID!): Track
}
