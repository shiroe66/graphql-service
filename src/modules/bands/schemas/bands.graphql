type Band {
  id: ID!
  name: String
  origin: String
  members: [Member]
  website: String
  genres: [Genre]
}

type BandsData {
  items: [Band]
  offset: Int
  limit: Int
  total: Int
}

input CreateBand {
  name: String!
  origin: String
  members: [ID]
  website: String
  genresIds: [ID]
}

input UpdateBand {
  _id: ID
  name: String
  origin: String
  members: [ID]
  website: String
  genresIds: [ID]
}

type Query {
  bands(limit: Int, offset: Int): BandsData
  band(id: ID!): Band
}

type Mutation {
  createBand(band: CreateBand): Band
  updateBand(id: ID!, band: UpdateBand): Band
  deleteBand(id: ID!): Band
}

type Member {
  artist: String
  instrument: String
  years: String
}
